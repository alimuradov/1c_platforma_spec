
Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ОстаткиНоменклатуры.Записывать = Истина;
	Движения.ОстаткиНоменклатуры.Записать();
	
	//
	Блокировка = Новый БлокировкаДанных;
	ЭлементБлокировки = Блокировка.Добавить("РегистрНакопления.ОстаткиНоменклатуры");
	ЭлементБлокировки.УстановитьЗначение("Качество", Справочники.Качество.НайтиПоКоду("1"));
	ЭлементБлокировки.Режим = РежимБлокировкиДанных.Исключительный;
	ЭлементБлокировки.ИсточникДанных = СписокНоменклатуры;
	ЭлементБлокировки.ИспользоватьИзИсточникаДанных("Номенклатура", "Номенклатура");
	Блокировка.Заблокировать();
	//
	
		//{{КОНСТРУКТОР_ЗАПРОСА_С_ОБРАБОТКОЙ_РЕЗУЛЬТАТА
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!
	
	Запрос = Новый Запрос;
	Запрос.Текст = 
		"ВЫБРАТЬ
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура КАК Номенклатура,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Количество) КАК Количество,
		|	СУММА(РасходнаяНакладнаяСписокНоменклатуры.Сумма) КАК Сумма
		|ПОМЕСТИТЬ ВТ_ДанныеДок
		|ИЗ
		|	Документ.РасходнаяНакладная.СписокНоменклатуры КАК РасходнаяНакладнаяСписокНоменклатуры
		|ГДЕ
		|	РасходнаяНакладнаяСписокНоменклатуры.Ссылка = &Ссылка
		|
		|СГРУППИРОВАТЬ ПО
		|	РасходнаяНакладнаяСписокНоменклатуры.Номенклатура
		|;
		|
		|////////////////////////////////////////////////////////////////////////////////
		|ВЫБРАТЬ
		|	ВТ_ДанныеДок.Номенклатура КАК Номенклатура,
		|	ВТ_ДанныеДок.Номенклатура.ПроцентНаценки КАК ПроцентНаценки,
		|	ПРЕДСТАВЛЕНИЕ(ВТ_ДанныеДок.Номенклатура) КАК НоменклатураПредставление,
		|	ВТ_ДанныеДок.Количество КАК Количество,
		|	ВТ_ДанныеДок.Сумма КАК Сумма,
		|	ВЫБОР
		|		КОГДА ОстаткиНоменклатурыОстатки.Подразделение = &ПодразделениеДок
		|			ТОГДА 1
		|		ИНАЧЕ 2
		|	КОНЕЦ КАК ПорядокСортировки,
		|	ОстаткиНоменклатурыОстатки.Подразделение КАК Подразделение,
		|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.КоличествоОстаток, 0) КАК КоличествоОстаток,
		|	ЕСТЬNULL(ОстаткиНоменклатурыОстатки.СуммаОстаток, 0) КАК СуммаОстаток
		|ИЗ
		|	ВТ_ДанныеДок КАК ВТ_ДанныеДок
		|		ЛЕВОЕ СОЕДИНЕНИЕ РегистрНакопления.ОстаткиНоменклатуры.Остатки(
		|				&МоментВремени,
		|				Подразделение В (&МасПодразделений)
		|					И Номенклатура В
		|						(ВЫБРАТЬ
		|							ВТ_ДанныеДок.Номенклатура КАК Номенклатура
		|						ИЗ
		|							ВТ_ДанныеДок КАК ВТ_ДанныеДок)) КАК ОстаткиНоменклатурыОстатки
		|		ПО ВТ_ДанныеДок.Номенклатура = ОстаткиНоменклатурыОстатки.Номенклатура
		|
		|УПОРЯДОЧИТЬ ПО
		|	Номенклатура,
		|	ПорядокСортировки
		|ИТОГИ
		|	МАКСИМУМ(Количество),
		|	СУММА(КоличествоОстаток)
		|ПО
		|	Номенклатура";
	
	Запрос.УстановитьПараметр("МоментВремени", МоментВремени());
	
	МасПодразделений = Новый Массив;
	МасПодразделений.Добавить(Подразделение);
	Если Подразделение.ТорговаяТочка Тогда
		МасПодразделений.Добавить(Справочники.Подразделения.ОтделЗакупок);
	КонецЕсли;
	
	Запрос.УстановитьПараметр("МасПодразделений", МасПодразделений);
	Запрос.УстановитьПараметр("ПодразделениеДок", Подразделение);
	Запрос.УстановитьПараметр("Ссылка", Ссылка);
	
	РезультатЗапроса = Запрос.Выполнить();
	
	ВыборкаНоменклатура = РезультатЗапроса.Выбрать(ОбходРезультатаЗапроса.ПоГруппировкам);
	
	Пока ВыборкаНоменклатура.Следующий() Цикл
		
		НеХватает = ВыборкаНоменклатура.Количество - ВыборкаНоменклатура.КоличествоОстаток;
		Если НеХватает > 0 Тогда
			
			Отказ = Истина;
			
			Сообщение = Новый СообщениеПользователю;
			Сообщение.Текст = СтрШаблон("Не хватает товара: %1 в количестве %2", ВыборкаНоменклатура.НоменклатураПредставление, НеХватает);
			Сообщение.Сообщить();
			
		КонецЕсли;
		
		Если Отказ Тогда
		
			Продолжить;
		
		КонецЕсли;
		
		ВыборкаДетальныеЗаписи = ВыборкаНоменклатура.Выбрать();
		
		ИтогоСписать = ВыборкаНоменклатура.Количество;
		Пока ИтогоСписать > 0 И ВыборкаДетальныеЗаписи.Следующий() Цикл
			
			СписатьПоПартии = МИН(ИтогоСписать, ВыборкаДетальныеЗаписи.КоличествоОстаток);
			ИтогоСписать = ИтогоСписать - СписатьПоПартии;
			
			Себестоимость = СписатьПоПартии / ВыборкаДетальныеЗаписи.КоличествоОстаток * ВыборкаДетальныеЗаписи.СуммаОстаток;
			
			Если ВыборкаДетальныеЗаписи.Подразделение = Справочники.Подразделения.ОтделЗакупок Тогда
				
				СебестоимостьПеремещения = ?(ВыборкаДетальныеЗаписи.ПроцентНаценки = 0, 
					Себестоимость, Себестоимость + ВыборкаДетальныеЗаписи.ПроцентНаценки * Себестоимость / 100); 
				
				
				Движение = Движения.ОстаткиНоменклатуры.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				Движение.Подразделение = ВыборкаДетальныеЗаписи.Подразделение;
				Движение.Количество = СписатьПоПартии;
				Движение.Сумма = Себестоимость;
				
				
				Движение = Движения.ОстаткиНоменклатуры.Добавить();
				Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
				Движение.Период = Дата;
				Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
				Движение.Подразделение = Подразделение;
				Движение.Количество = СписатьПоПартии;
				Движение.Сумма = СебестоимостьПеремещения;
				
				Себестоимость = СебестоимостьПеремещения;
				
			КонецЕсли;
			
			Движение = Движения.ОстаткиНоменклатуры.Добавить();
			Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
			Движение.Период = Дата;
			Движение.Номенклатура = ВыборкаДетальныеЗаписи.Номенклатура;
			Движение.Подразделение = Подразделение;
			Движение.Количество = СписатьПоПартии;
			Движение.Сумма = Себестоимость;
			
		КонецЦикла;
		
	КонецЦикла;
	
	//{{__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	// Данный фрагмент построен конструктором.
	// При повторном использовании конструктора, внесенные вручную изменения будут утеряны!!!

	//}}__КОНСТРУКТОР_ДВИЖЕНИЙ_РЕГИСТРОВ
	
КонецПроцедуры
